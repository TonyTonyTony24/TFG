version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: symfony_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: symfony_db
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony123
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U symfony -d symfony_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./symfony-backend
      dockerfile: ./docker/php/Dockerfile
    container_name: symfony_backend
    restart: unless-stopped
    working_dir: /var/www/app
    volumes:
      - ./symfony-backend/app:/var/www/app
    ports:
      - "8010:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "
        composer install &&
        php bin/console doctrine:database:create --if-not-exists &&
        php bin/console doctrine:schema:update --force &&
        symfony server:start --no-tls --port=8000 --allow-all-ip
      "

  frontend:
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./angular-frontend:/usr/src/app
    command: >
      bash -c "
        npm install &&
        npm start
      "

volumes:
  pgdata:

